第一篇

已完成：
子链交易数据通用性封装，第三轮测试完成，前期的数据同步严重bug修复，子链数据同步符合测试要求。

进行中：
1.子链TEE环境，核心系统裁剪和移植，已经裁剪出500M的linux内核系统，静态库lib库和动态so库裁剪进行中。

2.测试组持续开发自动化测试框架，提高自动化测试效率，主要包括黑盒测试框架，白盒测试框架，单元测试框架，压力测试框架，系统集成测试框架，主要用于父链测试，子链测试，tee安全测试，该部分是需要持续开发和维护的测试平台，伴随项目生命周期而存在。

3.父链分布式流量模型设计和流量监控，针对不同的组网模型监测其流量分布规律以便得出统计数据支持父链分片模型设计和调优，目前已经研究和统计出星型网络，环型网络，以及星环复合网络的流量模型特征，目前根据流量统计数据，采用星环复合的网络模型是几个模型中最优的模型，尚满足不了大规模应用需求，尚需进一步优化。

新启动：
子链交易数据定制封装立项讨论和poc论证，要求符合供应链的工作流适配，场景包括交付定金，供货，验收，交付尾款等经济场景

*****************************************************************************************************************************************

第二篇

已完成：
子链交易数据供应链场景定制化适配的产品立项

进行中：
1.Linux最小内核的裁剪和迁移工作主要包括，gcc、g++编译器迁移适配，C运行库、C++运行库，STL库，boost库的迁移适配，目前主要迁移gcc和g++，在最小内核上依赖完备性测试。

2.测试组持续开发自动化测试框架，提高自动化测试效率，主要包括黑盒测试框架，白盒测试框架，单元测试框架，压力测试框架，系统集成测试框架，主要用于父链测试，子链测试，tee安全测试，该部分是需要持续开发和维护的测试平台，伴随项目生命周期而存在。

3.采用星环复合的网络模型的流量调优，找到最优的星环结构，包括环大小，以及网络数据接力传播需要跨越的环的层数等参数调整对流量的影响。


新启动：
产品团队深度调研供应链的商业场景，为子链数据的供应链定制需求提供需求支持，场景包括交付定金，供货，验收，交付尾款等经济场景

*****************************************************************************************************************************************

第三篇

已完成：
Linux最小内核的裁剪以及编译环境迁移进展，在最小内核上gcc编译器已经可以编译普通c语言程序，gcc所需的通用依赖已经基本收集齐备，如后续编译特定程序缺少特定的依赖，可以再补齐。

进行中：
1.Linux最小内核的裁剪以及编译环境迁移进展，g++编译器迁移进行中。

2.测试组持续开发自动化测试框架，提高自动化测试效率，主要包括黑盒测试框架，白盒测试框架，单元测试框架，压力测试框架，系统集成测试框架，主要用于父链测试，子链测试，tee安全测试，该部分是需要持续开发和维护的测试平台，伴随项目生命周期而存在。

3.采用星环复合的网络模型的流量调优，找到最优的星环结构，扩散的中心环大小100，每扩张一层外环节点数是内环节点的100*(1-星型平均重叠度)，层数不超过三层即可满足生产要求，星型结构平均重叠度可以经过大量模拟数据测试统计得出。

4.产品团队深入到具体公司调研供应链管理流程，同时约相关行业资深人士一起讨论应用场景和数据流，过程很艰难，但是收获丰富。

*****************************************************************************************************************************************

第四篇

已完成：
产品团队完成普通零售业，生鲜业的供应链管理流程调研，接下来会调研微型制造业，以及高端制造业应用场景。

进行中：
1.Linux最小内核的裁剪以及编译环境迁移进展，g++编译器迁移进行中，由于g++比gcc要复杂的多，是编译c++程序的编译器，目前团队在做分割逐步分析g++编译器的依赖库。

2.测试组持续开发自动化测试框架，提高自动化测试效率，主要包括黑盒测试框架，白盒测试框架，单元测试框架，压力测试框架，系统集成测试框架，主要用于父链测试，子链测试，tee安全测试，该部分是需要持续开发和维护的测试平台，伴随项目生命周期而存在。

3.采用星环复合的网络模型的流量调优，找到最优的星环结构，扩散的中心环大小100，每扩张一层外环节点数是内环节点的100*(1-星型平均重叠度)，层数不超过三层即可满足生产要求，星型结构平均重叠度可以经过大量模拟数据测试统计得出。

4.产品团队深入到具体公司调研供应链管理流程，同时也邀约一些有相关工作经历的候选人面试探讨。

*****************************************************************************************************************************************

第五篇

进行中：
1.Linux最小内核的裁剪以及编译环境迁移进展，目前团队正在g++源码中分析依赖，目前已经把直接依赖收集50项，最复杂的是直接依赖又依赖其他间接依赖，全部比对完整是一件非常耗时和精细的任务。

2.测试组持续开发自动化测试框架，提高自动化测试效率，主要包括黑盒测试框架，白盒测试框架，单元测试框架，压力测试框架，系统集成测试框架，主要用于父链测试，子链测试，tee安全测试，该部分是需要持续开发和维护的测试平台，伴随项目生命周期而存在。

3.采用星环复合的网络模型的流量调优，找到最优的星环结构，扩散的中心环大小100，每扩张一层外环节点数是内环节点的100*(1-星型平均重叠度)，测试团队利用2000个模拟节点模拟流量，发现星型结构节点重叠度会严重影响环形层数，当重叠度越高，环数变多，重叠度越低，层数越少，网络传播效率变高。

4.产品团队深入到具体公司调研供应链管理流程，物色联想、乐视、小米等做过智能硬件供应链管理的专业人士。

*****************************************************************************************************************************************

第六篇

已完成：
已收集g++直接依赖50项，本周完成第一组10项直接依赖的源码分析，找齐第一组10项直接依赖的间接依赖20项，暂时先不考虑和收集三级依赖。

进行中：
1.Linux最小内核的裁剪以及编译环境迁移进展，目前团队正在g++源码中分析依赖，目前已经把直接依赖收集50项，正在收集间接依赖，按照10项一组的分割收集。

2.测试组持续开发自动化测试框架，提高自动化测试效率，主要包括黑盒测试框架，白盒测试框架，单元测试框架，压力测试框架，系统集成测试框架，主要用于父链测试，子链测试，tee安全测试，该部分是需要持续开发和维护的测试平台，伴随项目生命周期而存在。

3.采用星环复合的网络模型的流量调优，测试团队利用2000个模拟节点模拟流量，发现星型结构节点重叠度会严重影响环形层数，当重叠度越高，环数变多，重叠度越低，层数越少，网络传播效率变高，如何将平均重叠度控制在一个合理的范围是一个难题。

4.产品团队深入到具体公司调研供应链管理流程，接触了一个乐视电视从事过上游原材料供应的求职人员，让产品团队知道高端制造业供应和零售业供应有很大区别，零售业商场是甲方，供货商是乙方，高端制造业则完全相反，造成管理流程也是完全相反。

*****************************************************************************************************************************************

第七篇

已完成：
已收集g++直接依赖50项，本周完成第二组10项直接依赖的编译文件展开与解析，源码分析，找齐第二组10项直接依赖的间接依赖18项。

进行中：
1.Linux最小内核的裁剪以及编译环境迁移进展，目前已经收集g++直接依赖50项，正在收集间接依赖，按照直接依赖10项一组的分开收集间接依赖。

2.测试组持续开发自动化测试框架，提高自动化测试效率，主要包括黑盒测试框架，白盒测试框架，单元测试框架，压力测试框架，系统集成测试框架，主要用于父链测试，子链测试，tee安全测试，该部分是需要持续开发和维护的测试平台，伴随项目生命周期而存在。

3.采用星环复合的网络模型的流量调优，测试团队利用2000个模拟节点模拟流量，发现星型结构节点重叠度会严重影响环形层数，当重叠度越高，环数变多，重叠度越低，层数越少，网络传播效率变高，如何将平均重叠度控制在一个合理的范围是一个难题。按照比特币的新节点加入思想，新加入的节点需要先连接种子节点服务器，获取节点列表，团队正在研究利用种子节点分配节点结构，控制星型重合度。

4.产品团队继续深入调研高端制造业供应链场景，同时梳理工作流，将需求提炼出来给开发人员提供设计依据。

*****************************************************************************************************************************************

第八篇

已完成：
已收集g++直接依赖50项，本周完成第三组10项直接依赖的编译文件展开与解析，源码分析，找齐第三组10项直接依赖的间接依赖15项。

进行中：
1.Linux最小内核的裁剪以及编译环境迁移进展，目前已经收集g++直接依赖50项，正在收集间接依赖，按照直接依赖10项一组的分开收集间接依赖。

2.测试组持续开发自动化测试框架，提高自动化测试效率，主要包括黑盒测试框架，白盒测试框架，单元测试框架，压力测试框架，系统集成测试框架，主要用于父链测试，子链测试，tee安全测试，该部分是需要持续开发和维护的测试平台，伴随项目生命周期而存在。

3.采用星环复合的网络模型的流量调优，测试团队利用2000个模拟节点模拟流量，发现星型结构节点重叠度会严重影响环形层数，当重叠度越高，环数变多，重叠度越低，层数越少，网络传播效率变高，如何将平均重叠度控制在一个合理的范围是一个难题。按照比特币的新节点加入思想，新加入的节点需要先连接种子节点服务器，获取节点列表，团队正在研究利用种子节点分配节点结构，控制星型重合度。

新启动：
1.产品团队一部分深入行业继续调研，一部分研究传统集中式供应链管理软件SCM的工作流。

2.研发团队进行种子节点功能设计，控制节点与节点之间持有的共同邻居节点最适中，不能多，多了网络节点重叠度太高，也不能太少，少了造成信息孤岛。

*****************************************************************************************************************************************

第九篇

已完成：
1.已收集g++直接依赖50项，本周完成第四组10项直接依赖的编译文件展开与解析，源码分析，找齐第四组10项直接依赖的间接依赖16项。

2.完成网络模型种子节点服务设计，主要分为新节点登记，失效节点剔除，在线节点心跳检测，相邻节点分配几个模块。

进行中：
1.Linux最小内核的裁剪以及编译环境迁移进展，目前已经收集g++直接依赖50项，正在收集间接依赖，按照直接依赖10项一组的分开收集间接依赖。

2.测试组持续开发自动化测试框架，提高自动化测试效率，主要包括黑盒测试框架，白盒测试框架，单元测试框架，压力测试框架，系统集成测试框架，主要用于父链测试，子链测试，tee安全测试，该部分是需要持续开发和维护的测试平台，伴随项目生命周期而存在。

3.采用星环复合的网络模型的流量调优，按照比特币的新节点加入思想，新加入的节点需要先连接种子节点服务器，获取节点列表，团队正在研究利用种子节点分配节点结构，控制星型重合度，相当于有个全局的缔造者，来控制网络模型的构造。

4.产品团队行业调研完成初步调研，正在撰写调研报告；传统竞品调研团队还在研究比对各大SCM软件，提取产品公共功能属性。


*****************************************************************************************************************************************

第十篇

已完成：
1.已收集g++直接依赖50项，本周完成第五组10项直接依赖的编译文件展开与解析，源码分析，找齐第五组10项直接依赖的间接依赖22项，至此g++所需的50项直接依赖和91项间接依赖基本收集完备。

2.完成网络模型种子节点服务设计，大的模块分为新节点登记，失效节点剔除，在线节点心跳检测，相邻节点分配这几个模块，模块内部设计在开发中边开发边完成。

进行中：
1.Linux最小内核的裁剪以及编译环境迁移进展，目前已经收集g++直接依赖50项，正在收集间接依赖，按照直接依赖10项一组的分开收集间接依赖。

2.测试组持续开发自动化测试框架，提高自动化测试效率，主要包括黑盒测试框架，白盒测试框架，单元测试框架，压力测试框架，系统集成测试框架，主要用于父链测试，子链测试，tee安全测试，该部分是需要持续开发和维护的测试平台，伴随项目生命周期而存在。

3.采用星环复合的网络模型的流量调优，按照比特币的新节点加入思想，新加入的节点需要先连接种子节点服务器，获取节点列表，团队正在研究利用种子节点分配节点结构，控制星型重合度，相当于有个全局的缔造者，来控制网络模型的构造。

4.产品团队行业调研完成初步调研，正在撰写调研报告；传统竞品调研团队还在研究比对各大SCM软件，提取产品公共功能属性。


*****************************************************************************************************************************************

第十一篇

已完成：
1.g++依赖项中最后的三级依赖项没有被gcc依赖项包含的有5项收集完毕，g++已经可以编译一个标准c++程序文件，团队在整理和收集的过程中付出了极大的努力，也摸索到了高效的方法，在此表示感谢。

2.产品的行业调研报告完成，传统SCM竞品的功能分析和对比报告完成。

进行中：
1.Linux最小内核的裁剪以及编译环境迁移进展，g++编译器的依赖收集基本结束，还需收集部分三级依赖，三级依赖绝大多数和gcc的依赖重叠，在gcc迁移阶段已经完成，目前g++已经可以编写标准c++语法编写的程序。

2.测试组持续开发自动化测试框架，提高自动化测试效率，主要包括黑盒测试框架，白盒测试框架，单元测试框架，压力测试框架，系统集成测试框架，主要用于父链测试，子链测试，tee安全测试，该部分是需要持续开发和维护的测试平台，伴随项目生命周期而存在。

3.进入网络模型种子节点服务开发阶段，登记模块和节点分配模块先开发，这样测试团队就可以跟进测试网络流量模型。

*****************************************************************************************************************************************

第十二篇

已完成：
c++的STL库的依赖分析和依赖收集齐备，STL库是c++标准化组织开源的标准模板库，是c++开发必不可少的工具库，必须迁移。

进行中：
1.由于子链和TEE开发使用c和c++语言，使用到的比较大的工具库包括：c++的STL库，openSSL库，Boost库，需要将这些大型库的依赖收集完备，否费无法编译程序。

2.测试组持续开发自动化测试框架，提高自动化测试效率，主要包括黑盒测试框架，白盒测试框架，单元测试框架，压力测试框架，系统集成测试框架，主要用于父链测试，子链测试，tee安全测试，该部分是需要持续开发和维护的测试平台，伴随项目生命周期而存在。

3.进入网络模型种子节点服务开发阶段，登记模块和节点分配模块先开发，这样测试团队就可以跟进测试网络流量模型，登记模块已经开发完毕，分配节点模块开发过半。

4.测试组根据种子服务已经完成的功能部分跟进搭建测试环境，测试网络结构拓扑是否符合要求。

新启动：
全员参与分析产品的行业调研报告和SCM竞品的功能分析和对比报告，梳理需求点，剔除非关键需求，重点研究痛点需求，研发团队根据需求设计软件架构。

*****************************************************************************************************************************************

第十三篇

已完成：
1.完成openSSL库的依赖分析和收集，openSSL库是重要的开源加密、解密，签名、认证库，提供上百种安全、高强度加密算法，比特币正是基于openSSL才开发出来的，是区块链开发的安全基石库。

2.种子节点服务四大模块：新节点登记、失效节点剔除、在线节点心跳检测、相邻节点分配，其中新节点登记模块和相邻节点分配模块已经开发完成，提交测试。

进行中：
1.由于子链和TEE开发使用c和c++语言，使用到的比较大的工具库包括：c++的STL库，openSSL库，Boost库，需要将这些大型库的依赖收集完备，否费无法编译程序。

2.测试组持续开发自动化测试框架，提高自动化测试效率，主要包括黑盒测试框架，白盒测试框架，单元测试框架，压力测试框架，系统集成测试框架，主要用于父链测试，子链测试，tee安全测试，该部分是需要持续开发和维护的测试平台，伴随项目生命周期而存在。

3.种子节点服务四大模块：新节点登记、失效节点剔除、在线节点心跳检测、相邻节点分配，在线节点心跳检测模块和离线节点剔除模块正在开发中。

4.测试组根据种子服务已经完成新节点登记、相邻节点分配功能，测试网络拓扑调整和流量图谱变化是否符合预期。

5.产品和研发参与分析梳理供应链流程上链需求点，目前已经提炼出5大项需求，正在细化。

*****************************************************************************************************************************************

第十四篇

已完成：
1.完成Boost库的依赖分析和收集，Boost库是重要C++辅助工具类库，提供大量线程数据结构，算法模型，线程模型，可以极大的提高开发效率。

2.产品和研发参与分析梳理供应链流程上链需求点，目前已经提炼出5大项需求：用户管理、权限管理、审批流管理、定金交付、物料交付入库验证管理、尾款交付。

3.测试组根据种子服务的新节点登记、相邻节点分配功能，由种子服务负责分配星型中心的相邻节点，使得星环结构中星型重叠度大大降低，传播环数显著变少，测试结果符合预期，。

进行中：
1.由于子链和TEE开发使用c和c++语言，使用到的比较大的工具库包括：c++的STL库，openSSL库，Boost库，需要将这些大型库的依赖收集完备，否费无法编译现有的区块链程序。

2.测试组持续开发自动化测试框架，提高自动化测试效率，主要包括黑盒测试框架，白盒测试框架，单元测试框架，压力测试框架，系统集成测试框架，主要用于父链测试，子链测试，tee安全测试，该部分是需要持续开发和维护的测试平台，伴随项目生命周期而存在。

3.种子节点服务四大模块：新节点登记、失效节点剔除、在线节点心跳检测、相邻节点分配，本周在线节点心跳检测模块已经开发完成，离线节点剔除模块正在开发中，至此四大模块完成三个：新节点登记、相邻节点分配、在线节点心跳检测。

4.测试组根据种子服务中登记的全节点信息手工分配星型相邻节点，控制网络拓扑结构，对比不同的流量变化。

*****************************************************************************************************************************************

第十五篇

已完成：
1.种子节点服务四大模块：新节点登记、失效节点剔除、在线节点心跳检测、相邻节点分配全部开发完成，提交测试。

2.linux最小内核迁移，c和c++开发编译的全部依赖收集完备，使得团队对linux系统底层技术有了明显的整体提升，可以进入下一步单机编译调试阶段。

进行中：
1.linux最小内核裁剪出500M的系统环境，在该系统上的gcc，g++编译环境准备完成，所需开发依赖也准备完成，进入源代码在新系统上单机编译调试，以及适配开发中。

2.测试组持续开发自动化测试框架，提高自动化测试效率，主要包括黑盒测试框架，白盒测试框架，单元测试框架，压力测试框架，系统集成测试框架，主要用于父链测试，子链测试，tee安全测试，该部分是需要持续开发和维护的测试平台，伴随项目生命周期而存在。

3.测试组根据种子服务中登记的全节点信息手工分配星型相邻节点，控制网络拓扑结构变化，使用固定大小的网络包选择不同节点作为扩散源头，测试统计出全网同步的时间，以及流量传播的路径，记录数据汇总比对。

新启动：
种子节点服务中星型相邻节点分配原理是随机和手工分配的，只要符合重叠度要求即可，这种分配方案只考虑重叠度没有考虑地理位置对网络传输速度的影响，需要按照地理位置相邻的节点尽量分配在一起的原则来分配节点，需要构建节点地理位置库，分配时根据地理距离进行匹配，讨论和设计方案。

*****************************************************************************************************************************************

第十六篇

已完成：
1.根据测试结果，种子服务登记新节点正确，在线心跳正常，节点离线检测正确，节点分配重叠度符合要求，四个模块通过测试。

进行中：
1.在裁剪的小内核linux系统上，将子链工程迁移到新的系统上，搭建开发环境，配置编译配置项，修改makefile文件。

2.测试组持续开发自动化测试框架，提高自动化测试效率，主要包括黑盒测试框架，白盒测试框架，单元测试框架，压力测试框架，系统集成测试框架，主要用于父链测试，子链测试，tee安全测试，该部分是需要持续开发和维护的测试平台，伴随项目生命周期而存在。

3.测试组根据种子服务不断测试调优，依靠统计手段不断修正，摸索出最合适的重叠度参数，以构造最优的星环网络模型。

4.种子服务研发团队正在着手建立公网IP地址和所在城市对应的映射库，这样每个ip地址的节点加入进来，就可以查到该节点位于哪个城市，首先建立中国和美国的ip地址对应城市库。

*****************************************************************************************************************************************

第十七篇

已完成：
种子服务研发团队正在着手建立公网IP地址和所在城市对应的映射库，已完成中国和美国的ip地址所在城市库的建立。

进行中：
1.在裁剪的小内核linux系统上，将子链工程迁移到新的系统上，经过连续加班加点已经可以编译出重要的lib、so以及部分可执行程序。

2.测试组持续开发自动化测试框架，提高自动化测试效率，主要包括黑盒测试框架，白盒测试框架，单元测试框架，压力测试框架，系统集成测试框架，主要用于父链测试，子链测试，tee安全测试，该部分是需要持续开发和维护的测试平台，伴随项目生命周期而存在。

3.测试组根据种子服务不断测试调优，依靠统计手段不断修正，摸索出最合适的重叠度参数，以构造最优的星环网络模型。

4.种子服务研发团队正在着手建立公网IP地址和所在城市对应的映射库，正在进行欧洲ip地址城市库的建立。

*****************************************************************************************************************************************

第十八篇

已完成：
种子服务研发团队正在着手建立公网IP地址和所在城市对应的映射库，已完成中国、美国、欧洲ip地址和城市对应库的建立。

进行中：
1.在裁剪的小内核linux系统上，正在解决新编译的子链程序在新系统上网络驱动重新适配问题，原因是由于内核裁剪，驱动程序库大部分被精简，造成网络通信异常和程序宕机，需要适配新的驱动。

2.测试组持续开发自动化测试框架，提高自动化测试效率，主要包括黑盒测试框架，白盒测试框架，单元测试框架，压力测试框架，系统集成测试框架，主要用于父链测试，子链测试，tee安全测试，该部分是需要持续开发和维护的测试平台，伴随项目生命周期而存在。

3.测试组根据种子服务不断测试调优，依靠统计手段不断修正，摸索出最合适的重叠度参数，目前已经得出一个可选的重叠度范围30%——60%。

4.种子服务研发团队正在着手建立公网IP地址和所在城市对应的映射库，正在进行全球其他知名城市的ip地址城市库的建立，比如韩国，日本，香港，新加坡。

*****************************************************************************************************************************************

第十九篇

已完成：
种子服务研发团队正在着手建立公网IP地址和所在城市对应的映射库，已完成中国、美国、欧洲、韩国、日本、新加坡ip地址和城市对应库的建立，基本完成全球网络发达国家和地区的ip地址城市库的建立，其他的印度，南美等国家以后再补齐。

进行中：
1.在裁剪的小内核linux系统上，网络驱动适配器开发中，解决网络通信异常和程序宕机。

2.测试组持续开发自动化测试框架，提高自动化测试效率，主要包括黑盒测试框架，白盒测试框架，单元测试框架，压力测试框架，系统集成测试框架，主要用于父链测试，子链测试，tee安全测试，该部分是需要持续开发和维护的测试平台，伴随项目生命周期而存在。

3.测试组根据种子服务不断测试调优，依靠统计手段不断修正，摸索出最合适的重叠度参数，测试同事不断优化重叠度可选范围，使得可选范围逐渐缩小。

4.对接谷歌地图的开放api将ip地址城市库中城市名称所对应的经纬度查询出来入库，同时计算出每个城市和其他城市之间的距离并排序存储，同一座城市不同ip之间距离是0。

*****************************************************************************************************************************************

第二十篇

已完成：
1.完成全球发达城市ip地址和城市名映射库建立，完成城市之间距离排序库建立，为种子服务自动实现按地理位置分配相邻节点提供了依据，极大提高了网络模型的精准性和合理性。

2.在裁剪的小内核linux系统上，网络驱动程序开发完成，提交测试。

进行中：
1.在裁剪的小内核linux系统上，编译新的子链程序，不停发送网络区块同步消息，验证新的网络驱动程序的稳定性，网络IO缓冲区是否溢出，以及丢包率分析。

2.测试组持续开发自动化测试框架，提高自动化测试效率，主要包括黑盒测试框架，白盒测试框架，单元测试框架，压力测试框架，系统集成测试框架，主要用于父链测试，子链测试，tee安全测试，该部分是需要持续开发和维护的测试平台，伴随项目生命周期而存在。

3.测试构造虚拟ip地址测试种子服务是否能识别所在城池。

4.种子服务相邻节点分配模块算法改造，按照ip地址之间的地理空间距离远近分配相邻节点，同时保证节点重合度不得高于阈值，如果按照地理空间距离搜索到的节点超过重叠度阈值则将地理空间距离扩大重新搜索节点来分配。